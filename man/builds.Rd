% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/builds.R
\name{builds}
\alias{builds}
\alias{translateBuild}
\alias{extractBuild}
\alias{uniformBuilds}
\title{Utilities for working with build numbers}
\usage{
translateBuild(from, to = c("UCSC", "NCBI"))

extractBuild(string, build = c("UCSC", "NCBI"))

uniformBuilds(builds, cutoff = 0.2, na = c("", "NA"))
}
\arguments{
\item{from}{character() A vector of build versions typically from `genome()`
(e.g., "37"). The build vector must be homogenous (i.e.,
`length(unique(x)) == 1L`).}

\item{to}{character(1) The name of the desired build version (either "UCSC"
or "NCBI"; default: "UCSC")}

\item{string}{A single character string}

\item{build}{A vector of build version names (default UCSC, NCBI)}

\item{builds}{A character vector of builds}

\item{cutoff}{numeric(1L) An inclusive threshold tolerance value for missing
values and translating builds that are below the threshold}

\item{na}{character() The values to be considered as missing (default:
c("", "NA"))}
}
\value{
translateBuild: A character vector of translated genome builds

    extractBuild: A character string of the build information available

    uniformBuilds: A character vector of builds where all builds are
        identical `identical(length(unique(build)), 1L)`
}
\description{
A few functions are available to search for build versions,
either from NCBI or UCSC.

\itemize{
  \item \code{translateBuild}: translates between UCSC and NCBI build
  versions
  \item \code{extractBuild}: use grep patterns to find the first build
  within the string input
  \item \code{uniformBuilds}: replace build occurrences below a threshold
  level of occurence with the alternative build
}
}
\examples{

translateBuild("GRCh35", "UCSC")


extractBuild(
"SCENA_p_TCGAb29and30_SNP_N_GenomeWideSNP_6_G05_569110.nocnv_grch38.seg.txt"
)


buildvec <- rep(c("GRCh37", "hg19"), times = c(5, 1))
uniformBuilds(buildvec)

navec <- c(rep(c("GRCh37", "hg19"), times = c(5, 1)), "NA")
uniformBuilds(navec)

}
